import { User } from "../../src/entities/user";
import { getProductByCode, getProductInvoiceDescription } from "../../src/services/productService";
import { testUser } from "../testData";

describe("getProductInvoiceDescription", () => {
  test("[en] builds correct descriptions", () => {
    const user: User = {
      ...testUser,
      languageCode: "en"
    };

    expect(getProductInvoiceDescription(user, getProductByCode(user, "bundle-boss")))
      .toBe("A bundle of üç• 400 gptokens to work with GPT-4o and DALL-E 3. No expiration date. The invoice can be shared and paid by other users and also multiple times.");

    expect(getProductInvoiceDescription(user, getProductByCode(user, "bundle-student-mini")))
      .toBe("A bundle of 500 requests to GPT-4o mini. No expiration date. The invoice can be shared and paid by other users and also multiple times.");
  });

  test("[ru] builds correct descriptions", () => {
    const user: User = {
      ...testUser,
      languageCode: "ru"
    };

    expect(getProductInvoiceDescription(user, getProductByCode(user, "bundle-boss")))
      .toBe("–ü–∞–∫–µ—Ç –∏–∑ üç• 400 –≥–ø—Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å GPT-4o –∏ DALL-E 3. –ù–µ –∏–º–µ–µ—Ç —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è. –ò–Ω–≤–æ–π—Å –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–µ—Ä–µ–¥–∞–Ω –¥–ª—è –æ–ø–ª–∞—Ç—ã –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –∞ —Ç–∞–∫–∂–µ –æ–ø–ª–∞—á–µ–Ω –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑.");

    expect(getProductInvoiceDescription(user, getProductByCode(user, "bundle-student-mini")))
      .toBe("–ü–∞–∫–µ—Ç –∏–∑ 500 –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ GPT-4o mini. –ù–µ –∏–º–µ–µ—Ç —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è. –ò–Ω–≤–æ–π—Å –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–µ—Ä–µ–¥–∞–Ω –¥–ª—è –æ–ø–ª–∞—Ç—ã –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –∞ —Ç–∞–∫–∂–µ –æ–ø–ª–∞—á–µ–Ω –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑.");
  });
});
