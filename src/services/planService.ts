import { Plan } from "../entities/plan";
import { toCompactText } from "../lib/common";
import { bulletize } from "../lib/text";
import { gptokenString } from "./gptokenService";
import { getPlanSettings } from "./planSettingsService";

export function isPlanActive(plan: Plan) {
  const planSettings = getPlanSettings(plan);
  return !planSettings.disabled;
}

type DescriptionMode = "full" | "short";

export function getPlanDescription(plan: Plan, mode: DescriptionMode = "full"): string {
  const full = mode === "full";
  const suffix = (text: string, suffix: string) => full ? `${text}${suffix}` : text;
  const iff = (text: string) => full ? text : "";

  switch (plan) {
    case "free":
      return toCompactText(
        "ü§ë <b>–¢–∞—Ä–∏—Ñ ¬´–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π¬ª</b>:",
        ...bulletize(
          iff("–º–æ–¥–µ–ª—å <b>GPT-3.5</b>"),
          "5 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å",
          "100 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–µ—Å—è—Ü",
          "1 –∑–∞–ø—Ä–æ—Å –∫ <b>DALL-E 3</b> –≤ –Ω–µ–¥–µ–ª—é"
        )
      );

    case "premium":
      return toCompactText(
        "üíî <b>–¢–∞—Ä–∏—Ñ ¬´–ü—Ä–µ–º–∏—É–º¬ª</b>:",
        ...bulletize(
          iff("–º–æ–¥–µ–ª—å <b>GPT-3.5</b>"),
          "–¥–æ 100 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å",
          "290 —Ä—É–±–ª–µ–π –Ω–∞ 30 –¥–Ω–µ–π"
        )
      );

    case "unlimited":
      return toCompactText(
        "üíî <b>–¢–∞—Ä–∏—Ñ ¬´–ë–µ–∑–ª–∏–º–∏—Ç¬ª</b>:",
        ...bulletize(
          iff("–º–æ–¥–µ–ª—å <b>GPT-3.5</b>"),
          "–Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤",
          "390 —Ä—É–±–ª–µ–π –Ω–∞ 30 –¥–Ω–µ–π"
        )
      );

    case "novice":
      return toCompactText(
        "üëß <b>–ü–∞–∫–µ—Ç ¬´–ù–æ–≤–∏—á–æ–∫¬ª</b>:",
        ...bulletize(
          suffix("200 –∑–∞–ø—Ä–æ—Å–æ–≤", " –∫ –º–æ–¥–µ–ª–∏ <b>GPT-3.5</b>"),
          "49 —Ä—É–±–ª–µ–π –Ω–∞ 30 –¥–Ω–µ–π"
        )
      );

    case "student":
      return toCompactText(
        "üë®‚Äçüéì <b>–ü–∞–∫–µ—Ç ¬´–°—Ç—É–¥–µ–Ω—Ç¬ª</b>:",
        ...bulletize(
          suffix("500 –∑–∞–ø—Ä–æ—Å–æ–≤", " –∫ –º–æ–¥–µ–ª–∏ <b>GPT-3.5</b>"),
          "99 —Ä—É–±–ª–µ–π –Ω–∞ 30 –¥–Ω–µ–π"
        )
      );

    case "trial":
      return toCompactText(
        "üß™ <b>–ü–∞–∫–µ—Ç ¬´–ü—Ä–æ–±–Ω—ã–π¬ª</b>",
        ...bulletize(
          suffix(gptokenString(20), " = 20 –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ <b>GPT-4</b>"),
          iff("–∏–ª–∏ 10 –∫–∞—Ä—Ç–∏–Ω–æ–∫ <b>DALL-E 3</b>"),
          "99 —Ä—É–±–ª–µ–π –Ω–∞ 30 –¥–Ω–µ–π"
        )
      );

    case "creative":
      return toCompactText(
        "üë©‚Äçüé® <b>–ü–∞–∫–µ—Ç ¬´–¢–≤–æ—Ä—á–µ—Å–∫–∏–π¬ª</b>",
        ...bulletize(
          suffix(gptokenString(50), " = 50 –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ <b>GPT-4</b>"),
          iff("–∏–ª–∏ 25 –∫–∞—Ä—Ç–∏–Ω–æ–∫ <b>DALL-E 3</b>"),
          "199 —Ä—É–±–ª–µ–π –Ω–∞ 30 –¥–Ω–µ–π"
        )
      );

    case "pro":
      return toCompactText(
        "üòé <b>–ü–∞–∫–µ—Ç ¬´–ü—Ä–æ—Ñ–∏¬ª</b>",
        ...bulletize(
          suffix(gptokenString(150), " = 150 –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ <b>GPT-4</b>"),
          iff("–∏–ª–∏ 75 –∫–∞—Ä—Ç–∏–Ω–æ–∫ <b>DALL-E 3</b>"),
          "449 —Ä—É–±–ª–µ–π –Ω–∞ 30 –¥–Ω–µ–π"
        )
      );

    case "boss":
      return toCompactText(
        "ü§¥ <b>–ü–∞–∫–µ—Ç ¬´–ë–æ—Å—Å¬ª</b>",
        ...bulletize(
          suffix(gptokenString(400), " = 400 –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ <b>GPT-4</b>"),
          iff("–∏–ª–∏ 200 –∫–∞—Ä—Ç–∏–Ω–æ–∫ <b>DALL-E 3</b>"),
          "999 —Ä—É–±–ª–µ–π –Ω–∞ 30 –¥–Ω–µ–π"
        )
      );

    case "test-tinygpt3":
      return toCompactText(
        "üõ† <b>–¢–µ—Å—Ç–æ–≤—ã–π –ü–∞–∫–µ—Ç ¬´–ú–µ–ª–∫–∏–π GPT-3¬ª</b>:",
        ...bulletize(
          suffix("2 –∑–∞–ø—Ä–æ—Å–∞", " –∫ –º–æ–¥–µ–ª–∏ <b>GPT-3.5</b>"),
          "9999 —Ä—É–±–ª–µ–π –Ω–∞ 1 –¥–µ–Ω—å"
        )
      );

    case "test-tinygptokens":
      return toCompactText(
        "üõ† <b>–¢–µ—Å—Ç–æ–≤—ã–π –ü–∞–∫–µ—Ç ¬´–ú–µ–ª–∫–∏–π Gptoken¬ª</b>:",
        ...bulletize(
          suffix(gptokenString(4), " = 4 –∑–∞–ø—Ä–æ—Å–∞ –∫ <b>GPT-4</b>"),
          iff("–∏–ª–∏ 2 –∑–∞–ø—Ä–æ—Å–∞ –∫ <b>DALL-E 3</b>"),
          "9999 —Ä—É–±–ª–µ–π –Ω–∞ 1 –¥–µ–Ω—å"
        )
      );
  }
}
